% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PolygonMaker.R
\name{PolygonMaker}
\alias{PolygonMaker}
\title{Generate an alpha-hull determine by the spatial distribution of points.}
\usage{
PolygonMaker(x, coordHeaders = NULL, fraction = 0.95, partCount = 10,
  buffer, initialAlpha = 2, alphaIncrement = 1, alphaDecrement = 1,
  maxIter = 2, other_buffers = c(2000), clipToCoast = "terrestrial",
  coastline = NULL, proj = "+proj=longlat +datum=WGS84")
}
\arguments{
\item{x}{A two-column data.frame of occurrence records coordinates of the species.}

\item{coordHeaders}{A character string vector of length 2 specifying the names of the columns indicating the longitude and latitude respectively.}

\item{fraction}{A numeric between 0 and 1 specifying the minimum fraction of occurrences that must be included in the polygon.}

\item{partCount}{A numeric integer specifying the maximum number of disjunct polygons that are allowed.}

\item{buffer}{A numeric specifying the buffering distance in meters around each point.}

\item{initialAlpha}{A numeric specifying the starting value for the parameter alpha.}

\item{alphaIncrement}{A numeric specifying the amount to increase alpha at each iteration}

\item{alphaDecrement}{A numeric specifying the amount to decrease alpha if the function fails after the first iterations}

\item{maxIter}{A numeric integer specifying the maximum number of iterations before trying to build circular buffers.}

\item{other_buffers}{A numeric value or a vector of values of length \code{maxIter} specifying alternative buffer sizes (in meters) if the function fails after the first iterations.}

\item{clipToCoast}{A logical. Should the terrestrial \code{clipToCoast='terrestrial'}, the aquatic part \code{clipToCoast='aquatic'} or none part \code{clipToCoast='no'} part of the range be kept ?}

\item{proj}{A character string specifying the projection of the coordinates}
}
\description{
Make alpha-hulls from a set of coordinates. PolygonMaker will try maxIter times to create an alpha hull with alpha = initialAlpha, and will then increase alpha by alphaIncrement
}
